// Mocks generated by Mockito 5.4.1 from annotations
// in tiktok_clone/test/screens/bloc/tiktok_bloc_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tiktok_clone/models/following_section_model.dart' as _i2;
import 'package:tiktok_clone/models/for_you_section_model.dart' as _i3;
import 'package:tiktok_clone/screens/tiktok_screen/repository/tiktok_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFollowingSectionModel_0 extends _i1.SmartFake
    implements _i2.FollowingSectionModel {
  _FakeFollowingSectionModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForYouSectionModel_1 extends _i1.SmartFake
    implements _i3.ForYouSectionModel {
  _FakeForYouSectionModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TikTokSectionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTikTokSectionRepository extends _i1.Mock
    implements _i4.TikTokSectionRepository {
  MockTikTokSectionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.FollowingSectionModel> getFollowingSection() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowingSection,
          [],
        ),
        returnValue: _i5.Future<_i2.FollowingSectionModel>.value(
            _FakeFollowingSectionModel_0(
          this,
          Invocation.method(
            #getFollowingSection,
            [],
          ),
        )),
      ) as _i5.Future<_i2.FollowingSectionModel>);
  @override
  _i5.Future<_i3.ForYouSectionModel> forYouSeciton() => (super.noSuchMethod(
        Invocation.method(
          #forYouSeciton,
          [],
        ),
        returnValue:
            _i5.Future<_i3.ForYouSectionModel>.value(_FakeForYouSectionModel_1(
          this,
          Invocation.method(
            #forYouSeciton,
            [],
          ),
        )),
      ) as _i5.Future<_i3.ForYouSectionModel>);
}
